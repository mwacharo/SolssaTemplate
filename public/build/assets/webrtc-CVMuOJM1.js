import{E as W,r as c,G as O,j as p}from"./app-DqFy7JPp.js";import{A as E}from"./africastalking-BWG0fu3Q.js";const F=W("webrtc",()=>{const i=c("offline"),m=O(),l=p(()=>{var e,o;return(o=(e=m.props.auth)==null?void 0:e.user)==null?void 0:o.token}),d=p(()=>{var e,o;return(o=(e=m.props.auth)==null?void 0:e.user)==null?void 0:o.id}),f=c(null),s=c(!1),u=c(null),n=c(!1),y=p(()=>n.value?"success":"error"),h=p(()=>n.value?"Online":"Offline");function T(t){u.value=t,s.value=!0}function b(){s.value=!1,u.value=null}function R(){setInterval(()=>{(i.value==="ready"||i.value==="busy")&&axios.post("/api/v1/agent/ping").catch(()=>{})},15e3)}function k(){Echo.private("agent.status").listen(".status.updated",t=>{console.log(`üîÑ Agent ${t.agentId} is now ${t.status}`),t.agentId===d.value&&(i.value=t.status)})}async function A(){return new Promise(t=>{const e=setInterval(()=>{l.value&&(clearInterval(e),t())},300)})}async function r(t){try{i.value=t,await axios.post("/api/v1/agent/status",{status:t}),console.log(`‚úÖ Agent status updated to ${t}`)}catch(e){console.error("‚ùå Failed to update agent status:",e)}}async function I(){if(R(),k(),l.value||(console.warn("Waiting for token..."),await A()),f.value){console.log("WebRTC client already initialized.");return}const t={sounds:{ringing:"https://support.solssa.com/storage/ringtones/office_phone.mp3"}};try{const e=new E.Client(l.value,t);f.value=e,console.log("‚úÖ WebRTC client initialized for user:",d.value),e.on("ready",()=>{n.value=!0,console.log("üéß WebRTC client ready."),r("ready")}),e.on("error",o=>{console.error("‚ùå WebRTC error:",o)}),e.on("closed",()=>{n.value=!1,console.warn("üîå WebRTC connection closed."),r("closed")}),e.on("incomingcall",async o=>{console.log("üìû Incoming call from",o.from),r("busy");try{webrtcStore.afClient?(webrtcStore.afClient.answer(),console.log("‚úÖ Auto-answered call from",o.from),S(o.from)):console.error("‚ùå No active Africastalking WebRTC client instance")}catch(a){console.error("‚ùå Could not auto-answer:",a)}}),e.on("hangup",o=>{console.log("‚òéÔ∏è Call hung up:",o.reason),r("ready"),s.value=!1,n.value=!1})}catch(e){console.error("‚ö†Ô∏è Failed to initialize WebRTC:",e)}}async function S(t){try{const{data:e}=await axios.get(`https://app.boxleocourier.com/api/contact-search/${t}`,{timeout:12e4}),{data:o}=await axios.post("/api/v1/realtime/session",{context:{phoneNumber:t,order:e}});console.log("üéôÔ∏è OpenAI Realtime Session:",o);const a=new RTCPeerConnection,v=await navigator.mediaDevices.getUserMedia({audio:!0});v.getTracks().forEach(g=>a.addTrack(g,v));const w=document.createElement("audio");w.autoplay=!0,a.ontrack=g=>{w.srcObject=g.streams[0]};const C=await a.createOffer();await a.setLocalDescription(C);const x={type:"answer",sdp:await(await fetch("https://api.openai.com/v1/realtime?model=gpt-realtime",{method:"POST",headers:{Authorization:`Bearer ${o.client_secret.value}`,"Content-Type":"application/sdp"},body:C.sdp})).text()};await a.setRemoteDescription(x),console.log("‚úÖ Connected to OpenAI Realtime voice session")}catch(e){console.error("‚ùå Error connecting to Realtime AI:",e)}}return{afClient:f,userId:d,userToken:l,incomingCallDialog:s,incomingCall:u,connection_active:n,connectionStatusColor:y,connectionStatusText:h,incomingCall:u,incomingCallDialog:s,setIncomingCall:T,closeIncomingCallDialog:b,initializeAfricastalking:I,updateAgentStatus:r}});export{F as u};
