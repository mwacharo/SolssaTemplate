import{E as l,i as n}from"./app-CUgPE-Lf.js";const h=l("client",{state:()=>({vendors:[],riders:[],loading:!1,error:null}),getters:{getVendorById:e=>s=>e.vendors.find(r=>r.id===s),getClientById:e=>(s,r)=>{const t=e.vendors.find(i=>i.id===s);return t&&t.clients?t.clients.find(i=>i.id===r):null},getTotalClients:e=>e.vendors.reduce((s,r)=>s+(r.clients?r.clients.length:0),0),getActiveVendors:e=>e.vendors.filter(s=>s.status===1),getActiveRiders:e=>e.riders.filter(s=>s.status===1),getVendorsByOnboardingStage:e=>s=>e.vendors.filter(r=>r.onboarding_stage===s)},actions:{async fetchVendors(){var e,s;this.loading=!0,this.error=null;try{const r=await n.get("/api/v1/vendors");this.vendors=r.data.data||[]}catch(r){this.error=((s=(e=r.response)==null?void 0:e.data)==null?void 0:s.message)||r.message,console.error("Error fetching vendors:",r)}finally{this.loading=!1}},async fetchRiders(){var e,s;this.loading=!0,this.error=null;try{const r=await n.get("/api/v1/riders");this.riders=r.data.data||[]}catch(r){this.error=((s=(e=r.response)==null?void 0:e.data)==null?void 0:s.message)||r.message,console.error("Error fetching riders:",r)}finally{this.loading=!1}},async addVendor(e){var s,r;this.loading=!0,this.error=null;try{const t=await n.post("/api/v1/vendors",{name:e.name,company_name:e.company_name||e.name,email:e.email,phone:e.phone,address:e.address,city:e.city,state:e.state,country:e.country,business_type:e.business_type||"Corporation",delivery_mode:e.delivery_mode||"both",status:1});this.vendors.push({...t.data,clients:[]})}catch(t){throw this.error=((r=(s=t.response)==null?void 0:s.data)==null?void 0:r.message)||t.message,console.error("Error adding vendor:",t),t}finally{this.loading=!1}},async updateVendor(e,s){var r,t;this.loading=!0,this.error=null;try{await n.put(`/api/v1/vendors/${e}`,s),await this.fetchVendors()}catch(i){throw this.error=((t=(r=i.response)==null?void 0:r.data)==null?void 0:t.message)||i.message,console.error("Error updating vendor:",i),i}finally{this.loading=!1}},async deleteVendor(e){var s,r;this.loading=!0,this.error=null;try{await n.delete(`/api/v1/vendors/${e}`),this.vendors=this.vendors.filter(t=>t.id!==e)}catch(t){throw this.error=((r=(s=t.response)==null?void 0:s.data)==null?void 0:r.message)||t.message,console.error("Error deleting vendor:",t),t}finally{this.loading=!1}},async addClient(e,s){var r,t;this.loading=!0,this.error=null;try{const i=await n.post("http://127.0.0.1:8000/api/v1/clients",{name:s.name,email:s.email||null,phone_number:s.phone,address:s.address||null,city:s.city,vendor_id:e,status:"active"}),o=this.vendors.find(a=>a.id===e);o&&(o.clients||(o.clients=[]),o.clients.push(i.data))}catch(i){throw this.error=((t=(r=i.response)==null?void 0:r.data)==null?void 0:t.message)||i.message,console.error("Error adding client:",i),i}finally{this.loading=!1}},async updateClient(e,s){var r,t;this.loading=!0,this.error=null;try{await n.put(`http://127.0.0.1:8000/api/v1/clients/${e}`,{name:s.name,email:s.email,phone_number:s.phone,address:s.address,city:s.city,status:s.status}),await this.fetchVendors()}catch(i){throw this.error=((t=(r=i.response)==null?void 0:r.data)==null?void 0:t.message)||i.message,console.error("Error updating client:",i),i}finally{this.loading=!1}},async deleteClient(e,s){var r,t;this.loading=!0,this.error=null;try{await n.delete(`http://127.0.0.1:8000/api/v1/clients/${s}`);const i=this.vendors.find(o=>o.id===e);i&&i.clients&&(i.clients=i.clients.filter(o=>o.id!==s))}catch(i){throw this.error=((t=(r=i.response)==null?void 0:r.data)==null?void 0:t.message)||i.message,console.error("Error deleting client:",i),i}finally{this.loading=!1}},async addRider(e){var s,r;this.loading=!0,this.error=null;try{const t=await n.post("/api/v1/riders",{name:e.name,email:e.email,phone:e.phone,address:e.address,city:e.city,state:e.state,vehicle_number:e.vehicle_number,license_number:e.license_number,status:1});this.riders.push(t.data)}catch(t){throw this.error=((r=(s=t.response)==null?void 0:s.data)==null?void 0:r.message)||t.message,console.error("Error adding rider:",t),t}finally{this.loading=!1}},async initializeData(){await Promise.all([this.fetchVendors(),this.fetchRiders()])},transformVendorForAPI(e){return{name:e.name,company_name:e.company_name||e.name,email:e.email,billing_email:e.billing_email||e.email,phone:e.phone,address:e.address,city:e.city,state:e.state,country:e.country,business_type:e.business_type||"Corporation",delivery_mode:e.delivery_mode||"both",status:e.status||1}},transformClientForAPI(e,s){return{name:e.name,email:e.email,phone_number:e.phone,address:e.address,city:e.city,vendor_id:s,status:e.status||"active"}}}});export{h as u};
