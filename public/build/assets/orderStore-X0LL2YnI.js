import{E as Be,r as o,P as Ne,j as y,i as l}from"./app-CQIF2L9t.js";const qe=Be("orders",()=>{const v=o(""),g=o(""),S=Ne({deliveryPerson:"",callCentreAgent:"",status:"",notes:"",zone:"",city:""}),c=o([]),i=o({orders:!1,options:!1,creating:!1,updating:!1,deleting:!1}),u=o(null),I=o([]),T=o(!1),f=o(!1),w=o(null),_=o(null),P=o(!1),z=o(!1),O=o(null),A=o(null),F=o(null),C=o(null),b=o(null),D=o(null),k=o(null),j=o(null),p=o([]),m=o(""),ee=o([]),U=o([]),q=o([]),$=o([]),L=o([]),M=o([]),V=o([]),Z=o([]),G=o([]),H=o([]),J=o([]),te=o([]),ae=o([]),K=o([]),E=o({current_page:1,last_page:1,per_page:15,total:0,from:0,to:0}),re=y(()=>e=>c.value.find(t=>t.id===e)),oe=y(()=>c.value.filter(e=>e.status===1)),se=y(()=>c.value.filter(e=>e.status===0)),le=y(()=>c.value.filter(e=>e.status===2)),ne=y(()=>c.value.reduce((e,t)=>e+parseFloat(t.total_price||0),0)),ie=y(()=>{let e=0;return O.value&&e++,A.value&&e++,F.value&&e++,C.value&&e++,b.value&&e++,D.value&&e++,k.value&&e++,j.value&&e++,p.value&&p.value.length>0&&e++,m.value&&e++,e}),ce=y(()=>({status:O.value,product:A.value,zone:F.value,agent:C.value,rider:b.value,vendor:D.value,city:k.value,category:j.value,dateRange:p.value,search:m.value})),x=async(e={})=>{var t,a;i.value.orders=!0,u.value=null;try{const r=new URLSearchParams;e.page&&r.append("page",e.page),e.per_page&&r.append("per_page",e.per_page),e.status&&r.append("status",e.status),e.vendor_id&&r.append("vendor_id",e.vendor_id),e.city&&r.append("city",e.city),e.agent_id&&r.append("agent_id",e.agent_id),e.rider_id&&r.append("rider_id",e.rider_id),e.zone_id&&r.append("zone_id",e.zone_id),e.product_id&&r.append("product_id",e.product_id),e.category_id&&r.append("category_id",e.category_id),e.search&&r.append("search",e.search),e.created_from&&r.append("created_from",e.created_from),e.created_to&&r.append("created_to",e.created_to);const n=(await l.get(`/api/v1/orders?${r.toString()}`,{headers:{Accept:"application/json","Content-Type":"application/json"}})).data;if(!n.success)throw new Error(n.message||"Failed to fetch orders");z.value=!1;const d=n.data;return c.value=d.data||[],E.value={current_page:d.current_page||1,last_page:d.last_page||1,per_page:d.per_page||15,total:d.total||0,from:d.from||0,to:d.to||0},d}catch(r){throw u.value=((a=(t=r.response)==null?void 0:t.data)==null?void 0:a.message)||r.message||"Failed to fetch orders",r}finally{i.value.orders=!1}},h=o([]),de=async e=>{var t,a;if(!(!e||e.length===0))try{const r=await l.post("/api/v1/bulk-print-waybills",{order_ids:e},{headers:{Accept:"application/json","Content-Type":"application/json"},responseType:"blob"}),s=window.URL.createObjectURL(new Blob([r.data])),n=document.createElement("a");n.href=s,n.setAttribute("download","waybills.pdf"),document.body.appendChild(n),n.click(),n.remove()}catch(r){throw u.value=((a=(t=r.response)==null?void 0:t.data)==null?void 0:a.message)||r.message||"Failed to print waybill",r}},Q=async e=>{i.value.orders=!0,u.value=null;try{const t=await W(e);return _.value=t,w.value=e,t}catch(t){throw u.value=t.message||"Failed to load order",t}finally{i.value.orders=!1}},ue=async e=>{var t,a;i.value.creating=!0,u.value=null;try{const s=(await l.post("/api/v1/orders",e,{headers:{Accept:"application/json","Content-Type":"application/json"}})).data;if(!s.success)throw new Error(s.message||"Failed to create order");return c.value.unshift(s.data),E.value.total+=1,s.data}catch(r){throw u.value=((a=(t=r.response)==null?void 0:t.data)==null?void 0:a.message)||r.message||"Failed to create order",r}finally{i.value.creating=!1}},B=async(e,t)=>{var a,r;i.value.updating=!0,u.value=null;try{const n=(await l.put(`/api/v1/orders/${e}`,t,{headers:{Accept:"application/json","Content-Type":"application/json"}})).data;if(!n.success)throw new Error(n.message||"Failed to update order");const d=c.value.findIndex(N=>N.id===e);return d!==-1&&(c.value[d]=n.data),w.value===e&&(_.value=n.data),n.data}catch(s){throw u.value=((r=(a=s.response)==null?void 0:a.data)==null?void 0:r.message)||s.message||"Failed to update order",s}finally{i.value.updating=!1}},pe=async e=>{var t,a;i.value.deleting=!0,u.value=null;try{const s=(await l.delete(`/api/v1/orders/${e}`,{headers:{Accept:"application/json"}})).data;if(!s.success)throw new Error(s.message||"Failed to delete order");const n=c.value.findIndex(d=>d.id===e);n!==-1&&(c.value.splice(n,1),E.value.total-=1)}catch(r){throw u.value=((a=(t=r.response)==null?void 0:t.data)==null?void 0:a.message)||r.message||"Failed to delete order",r}finally{i.value.deleting=!1}},W=async e=>{var t,a;try{const s=(await l.get(`/api/v1/orders/${e}`,{headers:{Accept:"application/json"}})).data;if(!s.success)throw new Error(s.message||"Failed to fetch order details");return s.data}catch(r){const s=((a=(t=r.response)==null?void 0:t.data)==null?void 0:a.message)||r.message||"Failed to fetch order details";throw new Error(s)}},ve=async(e,t)=>B(e,{customer:t}),ge=async(e,t)=>B(e,{order_items:t}),X=async(e=null)=>{if(i.value.options){console.log("Options already loading, skipping...");return}i.value.options=!0;try{console.log("Fetching dropdown options...");const t=[l.get("/api/v1/statuses").catch(()=>({data:{data:[]}})),l.get("/api/v1/categories").catch(()=>({data:{data:[]}})),l.get("/api/v1/cities").catch(()=>({data:{data:[]}})),l.get("/api/v1/zones").catch(()=>({data:{data:[]}})),l.get("/api/v1/agents").catch(()=>({data:{data:[]}})),l.get("/api/v1/riders").catch(()=>({data:{data:[]}})),l.get("/api/v1/vendors").catch(()=>({data:{data:[]}})),l.get("/api/v1/countries").catch(()=>({data:{data:[]}})),l.get("/api/v1/warehouses").catch(()=>({data:{data:[]}})),l.get("/api/v1/clients").catch(()=>({data:{data:[]}}))];e?t.push(l.get(`/api/v1/vendors/${e}/products`).catch(()=>({data:{success:!1,data:[]}}))):t.push(l.get("/api/v1/products").catch(()=>({data:{success:!1,data:[]}})));const a=R=>!R||!R.data?[]:Array.isArray(R.data)?R.data:Array.isArray(R.data.data)?R.data.data:[],[r,s,n,d,N,Ee,Te,ze,Se,Pe,xe]=await Promise.all(t);K.value=a(r),q.value=a(s),$.value=a(n),L.value=a(d),M.value=a(N),V.value=a(Ee),Z.value=a(Te),J.value=a(ze),H.value=a(Se),G.value=a(Pe),U.value=a(xe),console.log("Dropdown options loaded successfully")}catch(t){throw console.error("Failed to fetch dropdown options:",t),t}finally{i.value.options=!1}},fe=async e=>{if(w.value=e,z.value=!1,T.value=!0,e){const t=await Q(e);return _.value=t,t}},he=()=>{T.value=!0,w.value=null,_.value=null,z.value=!0},ye=()=>{T.value=!1,w.value=null,_.value=null},we=()=>{O.value=null,A.value=null,F.value=null,C.value=null,b.value=null,D.value=null,k.value=null,j.value=null,p.value=[],m.value=""},_e=async()=>{const e={};O.value&&(e.status=O.value),A.value&&(e.product_id=A.value),F.value&&(e.zone_id=F.value),C.value&&(e.agent_id=C.value),b.value&&(e.rider_id=b.value),D.value&&(e.vendor_id=D.value),k.value&&(e.city=k.value),j.value&&(e.category_id=j.value),m.value&&(e.search=m.value),p.value&&p.value.length===2&&(e.created_from=p.value[0],e.created_to=p.value[1]),e.page=1,await x(e)},Oe=async()=>{if(!P.value)try{await Promise.all([X(),x({page:1})]),P.value=!0}catch(e){console.error("Failed to initialize order store:",e)}},Ae=(e=[])=>{console.debug("openAssignDeliveryDialog called with:",e),h.value=e,v.value="assignDelivery",g.value="Assign Delivery Person",f.value=!0,console.debug("Bulk action dialog opened. State:",{selectedOrders:h.value,dialogType:v.value,dialogTitle:g.value,bulkActionDialog:f.value})},Fe=(e=[])=>{h.value=e,v.value="assignCallCentre",g.value="Assign Call Centre Agent",f.value=!0},Ce=(e=[])=>{h.value=e,v.value="status",g.value="Change Status",f.value=!0},be=(e=[])=>{h.value=e,v.value="delete",g.value="Delete Orders",f.value=!0},Y=()=>{f.value=!1,v.value="",g.value="",h.value=[],Object.keys(S).forEach(e=>{S[e]=""})},De=async e=>{i.value.updating=!0;try{const{type:t,data:a,orders:r}=e,s=Array.isArray(r)&&r.length>0?r:h.value;switch(console.debug("handleBulkAction called with:",{type:t,data:a,orders:s}),t){case"assignDelivery":if(!a.deliveryPerson)throw console.error("No delivery person selected"),new Error("No delivery person selected");console.debug("Assigning delivery person:",a.deliveryPerson,"to orders:",s),await ke(s,a.deliveryPerson);break;case"assignCallCentre":if(!a.callCentreAgent)throw console.error("No call centre agent selected"),new Error("No call centre agent selected");console.debug("Assigning call centre agent:",a.callCentreAgent,"to orders:",s),await je(s,a.callCentreAgent);break;case"status":if(!a.status)throw console.error("No status selected"),new Error("No status selected");console.debug("Updating status for orders:",s,"with status:",a.status),await me(s,a.status);break;case"delete":console.debug("Deleting orders:",s),await Re(s);break;default:console.warn("Unknown bulk action type:",t)}Y()}catch(t){console.error("Bulk action failed:",t)}finally{i.value.updating=!1}},ke=async(e=[],t)=>{if(!e.length||!t)throw new Error("Orders and deliveryPersonId are required");try{await l.post("/api/v1/orders/assign-rider",{order_ids:e,rider_id:t},{headers:{Accept:"application/json","Content-Type":"application/json"}}),console.log("Assigned delivery person:",t,"to orders:",e)}catch(a){throw console.error("Failed to assign rider:",a),a}},je=async(e=[],t)=>{if(!e.length||!t)throw new Error("Orders and agentId are required");try{await l.post("/api/v1/orders/assign-agent",{order_ids:e,agent_id:t},{headers:{Accept:"application/json","Content-Type":"application/json"}}),console.log("Assigned call centre agent:",t,"to orders:",e)}catch(a){throw console.error("Failed to assign agent:",a),a}},me=async(e=[],t)=>{if(!e.length||!t)throw new Error("Orders and status are required");try{await l.post("/api/v1/orders/update-status",{order_ids:e,status:t},{headers:{Accept:"application/json","Content-Type":"application/json"}}),console.log("Updated status for orders:",e,"to status:",t)}catch(a){throw console.error("Failed to update status:",a),a}},Re=async(e=[])=>{if(!e.length)throw new Error("No orders selected for deletion");try{await l.post("/api/v1/orders/bulk-delete",{order_ids:e},{headers:{Accept:"application/json","Content-Type":"application/json"}}),Array.isArray(c.value)&&e.forEach(t=>{const a=c.value.findIndex(r=>r.id===t);a!==-1&&(c.value.splice(a,1),E.value.total-=1)}),console.log("Deleted orders:",e)}catch(t){throw console.error("Failed to bulk delete orders:",t),t}};return{orders:c,loading:i,error:u,notifications:I,dialog:T,bulkActionDialog:f,selectedOrderId:w,selectedOrder:_,initialized:P,isCreateMode:z,orderFilterStatus:O,orderFilterProduct:A,orderFilterZone:F,orderFilterAgent:C,orderFilterRider:b,orderFilterVendor:D,orderFilterCity:k,orderFilterCategory:j,orderDateRange:p,orderSearch:m,orderStatusOptions:ee,productOptions:U,categoryOptions:q,cityOptions:$,zoneOptions:L,agentOptions:M,riderOptions:V,vendorOptions:Z,clientOptions:G,warehouseOptions:H,countryOptions:J,deliveryStatusOptions:te,userOptions:ae,statusOptions:K,pagination:E,getOrderById:re,confirmedOrders:oe,pendingOrders:se,cancelledOrders:le,totalRevenue:ne,activeFilterCount:ie,currentFilters:ce,printOrders:de,fetchOrders:x,loadOrder:Q,createOrder:ue,updateOrder:B,updateOrderCustomer:ve,updateOrderItems:ge,deleteOrder:pe,getOrderDetails:W,fetchDropdownOptions:X,openDialog:fe,openCreateDialog:he,openAssignDeliveryDialog:Ae,openAssignCallCentreDialog:Fe,openBulkStatusDialog:Ce,dialogType:v,dialogTitle:g,bulkActionForm:S,openDeleteDialog:be,closeBulkActionDialog:Y,handleBulkAction:De,closeDialog:ye,clearAllFilters:we,applyFilters:_e,initialize:Oe}});export{qe as u};
