import{E as O,r as c,G as E,j as p}from"./app-CmrUdva9.js";import{A as z}from"./africastalking-CLbNbfTw.js";const P=O("webrtc",()=>{const i=c("offline"),m=E(),l=p(()=>{var e,o;return(o=(e=m.props.auth)==null?void 0:e.user)==null?void 0:o.token}),d=p(()=>{var e,o;return(o=(e=m.props.auth)==null?void 0:e.user)==null?void 0:o.id}),g=c(null),s=c(!1),u=c(null),a=c(!1),y=p(()=>a.value?"success":"error"),C=p(()=>a.value?"Online":"Offline");function I(t){u.value=t,s.value=!0}function T(){s.value=!1,u.value=null}function A(){setInterval(()=>{(i.value==="ready"||i.value==="busy")&&axios.post("/api/v1/agent/ping").catch(()=>{})},15e3)}function S(){Echo.private("agent.status").listen(".status.updated",t=>{console.log(`üîÑ Agent ${t.agentId} is now ${t.status}`),t.agentId===d.value&&(i.value=t.status)})}async function k(){return new Promise(t=>{const e=setInterval(()=>{l.value&&(clearInterval(e),t())},300)})}async function r(t){try{i.value=t,await axios.post("/api/v1/agent/status",{status:t}),console.log(`‚úÖ Agent status updated to ${t}`)}catch(e){console.error("‚ùå Failed to update agent status:",e)}}async function R(){if(A(),S(),l.value||(console.warn("Waiting for token..."),await k()),g.value){console.log("WebRTC client already initialized.");return}const t={sounds:{ringing:"https://support.solssa.com/storage/ringtones/office_phone.mp3"}};try{const e=new z.Client(l.value,t);g.value=e,console.log("‚úÖ WebRTC client initialized for user:",d.value),e.on("ready",()=>{a.value=!0,console.log("üéß WebRTC client ready."),r("ready")}),e.on("error",o=>{console.error("‚ùå WebRTC error:",o)}),e.on("closed",()=>{a.value=!1,console.warn("üîå WebRTC connection closed."),r("closed")}),e.on("incomingcall",async o=>{console.log("üìû Incoming call from",o.from),r("busy");try{e.answer(),console.log("‚úÖ Auto-answered call from",o.from),b(o.from)}catch(n){console.error("‚ùå Could not auto-answer:",n)}}),e.on("hangup",o=>{console.log("‚òéÔ∏è Call hung up:",o.reason),r("ready"),s.value=!1,a.value=!1})}catch(e){console.error("‚ö†Ô∏è Failed to initialize WebRTC:",e)}}async function b(t){try{console.log("üéß Connecting AI for:",t);const{data:e}=await axios.get(`https://app.boxleocourier.com/api/contact-search/${t}`,{timeout:12e4}),{data:o}=await axios.post("/api/v1/realtime/session",{context:{phoneNumber:t,order:e}});console.log("üéôÔ∏è OpenAI Realtime Session:",o);const n=new RTCPeerConnection,v=document.createElement("audio");v.autoplay=!0,n.ontrack=f=>{v.srcObject=f.streams[0]};const w=await navigator.mediaDevices.getUserMedia({audio:!0});w.getTracks().forEach(f=>n.addTrack(f,w));const h=await n.createOffer();await n.setLocalDescription(h);const x={type:"answer",sdp:await(await fetch("https://api.openai.com/v1/realtime?model=gpt-realtime",{method:"POST",headers:{Authorization:`Bearer ${o.client_secret.value}`,"Content-Type":"application/sdp"},body:h.sdp})).text()};await n.setRemoteDescription(x),console.log("‚úÖ Connected to OpenAI Realtime voice session");const W=new SpeechSynthesisUtterance("Hi there! I am Boxleo AI Assistant, ready to assist.");window.speechSynthesis.speak(W)}catch(e){console.error("‚ùå Error connecting to Realtime AI:",e)}}return{afClient:g,userId:d,userToken:l,incomingCallDialog:s,incomingCall:u,connection_active:a,connectionStatusColor:y,connectionStatusText:C,incomingCall:u,incomingCallDialog:s,setIncomingCall:I,closeIncomingCallDialog:T,initializeAfricastalking:R,updateAgentStatus:r}});export{P as u};
