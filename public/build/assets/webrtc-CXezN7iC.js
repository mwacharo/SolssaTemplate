import{E as W,r as c,G as O,j as p}from"./app-CUXQfuet.js";import{A as E}from"./africastalking-BVNgbNpx.js";const F=W("webrtc",()=>{const i=c("offline"),m=O(),l=p(()=>{var e,t;return(t=(e=m.props.auth)==null?void 0:e.user)==null?void 0:t.token}),d=p(()=>{var e,t;return(t=(e=m.props.auth)==null?void 0:e.user)==null?void 0:t.id}),g=c(null),s=c(!1),u=c(null),n=c(!1),h=p(()=>n.value?"success":"error"),C=p(()=>n.value?"Online":"Offline");function T(o){u.value=o,s.value=!0}function b(){s.value=!1,u.value=null}function k(){setInterval(()=>{(i.value==="ready"||i.value==="busy")&&axios.post("/api/v1/agent/ping").catch(()=>{})},15e3)}function I(){Echo.private("agent.status").listen(".status.updated",o=>{console.log(`üîÑ Agent ${o.agentId} is now ${o.status}`),o.agentId===d.value&&(i.value=o.status)})}async function R(){return new Promise(o=>{const e=setInterval(()=>{l.value&&(clearInterval(e),o())},300)})}async function r(o){try{i.value=o,await axios.post("/api/v1/agent/status",{status:o}),console.log(`‚úÖ Agent status updated to ${o}`)}catch(e){console.error("‚ùå Failed to update agent status:",e)}}async function A(){if(k(),I(),l.value||(console.warn("Waiting for token..."),await R()),g.value){console.log("WebRTC client already initialized.");return}const o={sounds:{ringing:"https://support.solssa.com/storage/ringtones/office_phone.mp3"}};try{const e=new E.Client(l.value,o);g.value=e,console.log("‚úÖ WebRTC client initialized for user:",d.value),e.on("ready",()=>{n.value=!0,console.log("üéß WebRTC client ready."),r("ready")}),e.on("error",t=>{console.error("‚ùå WebRTC error:",t)}),e.on("closed",()=>{n.value=!1,console.warn("üîå WebRTC connection closed."),r("closed")}),e.on("incomingcall",async t=>{console.log("üìû Incoming call from",t.from),console.log("you clicked me"),r("busy");try{await t.answer(),console.log("‚úÖ Auto-answered call from",t.from),S(t.from)}catch(a){console.error("‚ùå Could not auto-answer:",a)}}),e.on("hangup",t=>{console.log("‚òéÔ∏è Call hung up:",t.reason),r("ready"),s.value=!1,n.value=!1})}catch(e){console.error("‚ö†Ô∏è Failed to initialize WebRTC:",e)}}async function S(o){try{const{data:e}=await axios.get(`https://app.boxleocourier.com/api/contact-search/${o}`,{timeout:12e4}),{data:t}=await axios.post("/api/v1/realtime/session",{context:{phoneNumber:o,order:e}});console.log("üéôÔ∏è OpenAI Realtime Session:",t);const a=new RTCPeerConnection,v=await navigator.mediaDevices.getUserMedia({audio:!0});v.getTracks().forEach(f=>a.addTrack(f,v));const w=document.createElement("audio");w.autoplay=!0,a.ontrack=f=>{w.srcObject=f.streams[0]};const y=await a.createOffer();await a.setLocalDescription(y);const x={type:"answer",sdp:await(await fetch("https://api.openai.com/v1/realtime?model=gpt-realtime",{method:"POST",headers:{Authorization:`Bearer ${t.client_secret.value}`,"Content-Type":"application/sdp"},body:y.sdp})).text()};await a.setRemoteDescription(x),console.log("‚úÖ Connected to OpenAI Realtime voice session")}catch(e){console.error("‚ùå Error connecting to Realtime AI:",e)}}return{afClient:g,userId:d,userToken:l,incomingCallDialog:s,incomingCall:u,connection_active:n,connectionStatusColor:h,connectionStatusText:C,incomingCall:u,incomingCallDialog:s,setIncomingCall:T,closeIncomingCallDialog:b,initializeAfricastalking:A,updateAgentStatus:r}});export{F as u};
