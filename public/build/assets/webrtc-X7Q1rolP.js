import{E,r as i,G as z,j as g}from"./app-CFUbu3JD.js";import{A as D}from"./africastalking-CtDbElpD.js";const _=E("webrtc",()=>{const l=i("offline"),y=z(),u=g(()=>{var e,t;return(t=(e=y.props.auth)==null?void 0:e.user)==null?void 0:t.token}),f=g(()=>{var e,t;return(t=(e=y.props.auth)==null?void 0:e.user)==null?void 0:t.id}),m=i(null),r=i(!1),d=i(null),s=i(!1),k=g(()=>s.value?"success":"error"),A=g(()=>s.value?"Online":"Offline");function b(o){d.value=o,r.value=!0}function I(){r.value=!1,d.value=null}function T(){setInterval(()=>{(l.value==="ready"||l.value==="busy")&&axios.post("/api/v1/agent/ping").catch(()=>{})},15e3)}function R(){Echo.private("agent.status").listen(".status.updated",o=>{console.log(`üîÑ Agent ${o.agentId} is now ${o.status}`),o.agentId===f.value&&(l.value=o.status)})}async function S(){return new Promise(o=>{const e=setInterval(()=>{u.value&&(clearInterval(e),o())},300)})}async function c(o){try{l.value=o,await axios.post("/api/v1/agent/status",{status:o}),console.log(`‚úÖ Agent status updated to ${o}`)}catch(e){console.error("‚ùå Failed to update agent status:",e)}}async function x(){if(T(),R(),u.value||(console.warn("Waiting for token..."),await S()),m.value){console.log("WebRTC client already initialized.");return}const o={sounds:{ringing:"https://support.solssa.com/storage/ringtones/office_phone.mp3"}};try{const e=new D.Client(u.value,o);m.value=e,console.log("‚úÖ WebRTC client initialized for user:",f.value),e.on("ready",()=>{s.value=!0,console.log("üéß WebRTC client ready."),c("ready")}),e.on("error",t=>{console.error("‚ùå WebRTC error:",t)}),e.on("closed",()=>{s.value=!1,console.warn("üîå WebRTC connection closed."),c("closed")}),e.on("incomingcall",async t=>{console.log("üìû Incoming call from",t.from),c("busy");try{e.answer(),console.log("‚úÖ Auto-answered call from",t.from),O(t.from)}catch(n){console.error("‚ùå Could not auto-answer:",n)}}),e.on("hangup",t=>{console.log("‚òéÔ∏è Call hung up:",t.reason),c("ready"),r.value=!1,s.value=!1})}catch(e){console.error("‚ö†Ô∏è Failed to initialize WebRTC:",e)}}async function O(o){try{console.log("üéß Starting AI Realtime session for:",o);const{data:e}=await axios.get(`https://app.boxleocourier.com/api/contact-search/${o}`,{timeout:12e4}),{data:t}=await axios.post("/api/v1/realtime/session",{context:{phoneNumber:o,order:e}});console.log("üß† OpenAI Realtime Session Created:",t);const n=new RTCPeerConnection,v=await navigator.mediaDevices.getUserMedia({audio:!0});v.getTracks().forEach(p=>n.addTrack(p,v));const a=document.createElement("audio");a.autoplay=!0,a.controls=!0,a.style.position="fixed",a.style.bottom="10px",a.style.right="10px",document.body.appendChild(a),n.ontrack=p=>{console.log("üéµ AI audio track received");const[C]=p.streams,[W]=C.getAudioTracks();W.onunmute=()=>{console.log("‚úÖ AI started speaking...")},a.srcObject=C};const w=await n.createOffer();await n.setLocalDescription(w);const h=await(await fetch("https://api.openai.com/v1/realtime?model=gpt-realtime",{method:"POST",headers:{Authorization:`Bearer ${t.client_secret.value}`,"Content-Type":"application/sdp"},body:w.sdp})).text();h.includes("m=audio")||console.warn("‚ö†Ô∏è AI response did not contain audio. Check OpenAI session config."),await n.setRemoteDescription({type:"answer",sdp:h}),console.log("‚úÖ Connected to OpenAI Realtime AI session successfully");try{await a.play()}catch{console.warn("‚ö†Ô∏è Autoplay blocked by browser. Click anywhere to allow audio."),document.body.addEventListener("click",async()=>{await a.play(),console.log("üîä Audio playback resumed after user gesture")},{once:!0})}}catch(e){console.error("‚ùå Error connecting to Realtime AI:",e)}}return{afClient:m,userId:f,userToken:u,incomingCallDialog:r,incomingCall:d,connection_active:s,connectionStatusColor:k,connectionStatusText:A,incomingCall:d,incomingCallDialog:r,setIncomingCall:b,closeIncomingCallDialog:I,initializeAfricastalking:x,updateAgentStatus:c}});export{_ as u};
